@model BoxProblem.Data.BoxInventory;
@{
    ViewData["Title"] = "Edit";
}
<link href="~/bootstrap.css" rel="stylesheet" />
<link href="~/css/StyleSheet.css" rel="stylesheet" />

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        <div class="control-label col-md-2 inputLabel">
            Weight
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", @placeholder = "0" } })
            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2 inputLabel">
            Volume
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Volume, new { htmlAttributes = new { @class = "form-control",  @placeholder = "0" } })
            @Html.ValidationMessageFor(model => model.Volume, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2 inputLabel">
            Inventory Count
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.InventoryCount, new { htmlAttributes = new { @class = "form-control",  @placeholder = "0" } })
            @Html.ValidationMessageFor(model => model.InventoryCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2 inputLabel">
            Can Hold Liquid
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.CanHoldLiquid, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CanHoldLiquid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2 inputLabel">
            Cost
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", @placeholder = "0.00" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" }) 
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn" id="alertButton" />
        </div>
            <div>
                @Html.ActionLink("Back to List", "Index", "Box", null, new { @class = "btn", @id = "navButton" })
            </div>
        
    </div>
    </div>
}
